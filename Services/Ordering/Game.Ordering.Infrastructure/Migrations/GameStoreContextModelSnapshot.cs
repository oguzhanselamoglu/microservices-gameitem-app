// <auto-generated />
using System;
using Game.Ordering.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Game.Ordering.Infrastructure.Migrations
{
    [DbContext(typeof(GameStoreContext))]
    partial class GameStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Game.Ordering.Domain.OrderAggregate.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BuyerId")
                        .HasColumnType("text")
                        .HasColumnName("buyerid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createddate");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("modifiedby");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modifieddate");

                    b.HasKey("Id")
                        .HasName("pk_orders");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("Game.Ordering.Domain.OrderAggregate.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createddate");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("modifiedby");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modifieddate");

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer")
                        .HasColumnName("orderid");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("text")
                        .HasColumnName("pictureurl");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("price");

                    b.Property<string>("ProductId")
                        .HasColumnType("text")
                        .HasColumnName("productid");

                    b.Property<string>("ProductName")
                        .HasColumnType("text")
                        .HasColumnName("productname");

                    b.HasKey("Id")
                        .HasName("pk_orderitem");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("ix_orderitem_orderid");

                    b.ToTable("orderitem");
                });

            modelBuilder.Entity("Game.Ordering.Domain.OrderAggregate.Order", b =>
                {
                    b.OwnsOne("Game.Ordering.Domain.OrderAggregate.Address", "Address", b1 =>
                        {
                            b1.Property<int>("OrderId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasColumnName("id")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<string>("District")
                                .HasColumnType("text")
                                .HasColumnName("address_district");

                            b1.Property<string>("Line")
                                .HasColumnType("text")
                                .HasColumnName("address_line");

                            b1.Property<string>("Province")
                                .HasColumnType("text")
                                .HasColumnName("address_province");

                            b1.Property<string>("Street")
                                .HasColumnType("text")
                                .HasColumnName("address_street");

                            b1.Property<string>("ZipCode")
                                .HasColumnType("text")
                                .HasColumnName("address_zipcode");

                            b1.HasKey("OrderId")
                                .HasName("pk_orders");

                            b1.ToTable("orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderId")
                                .HasConstraintName("fk_orders_orders_id");
                        });

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Game.Ordering.Domain.OrderAggregate.OrderItem", b =>
                {
                    b.HasOne("Game.Ordering.Domain.OrderAggregate.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("fk_orderitem_orders_orderid");
                });

            modelBuilder.Entity("Game.Ordering.Domain.OrderAggregate.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
